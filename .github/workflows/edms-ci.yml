name: EDMS CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
    - name: Install Dependencies
      run: |
        poetry install
        poetry add ruff
    - name: Run Ruff
      run: |
        poetry run ruff check
    - name: Run Tests
      run: |
        cd EDMS
        poetry run python manage.py test --exclude-tag=celery
      env:
        REDIS_HOST: ${{ secrets.REDIS_HOST }}
        REDIS_PORT: ${{ vars.REDIS_PORT }}
        POSTGRES_USER: ${{ vars.POSTGRES_USER }}
        POSTGRES_NAME: ${{ vars.POSTGRES_DB }}
        POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}


# ruff
# safety
# bandit
