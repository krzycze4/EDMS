# Generated by Django 4.2.14 on 2024-08-30 19:12

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Addendum",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(help_text="Addendum name, e.g. Addendum #01/01/2024.", max_length=25)),
                ("create_date", models.DateField(help_text="Creation date.")),
                (
                    "end_date",
                    models.DateField(
                        help_text="End date of the addendum is the new end date of the agreement (attribute Agreement.end_date_actual)."
                    ),
                ),
                ("salary_gross", models.IntegerField(help_text="Gross salary owed to the employee.")),
                ("scan", models.FileField(help_text="Physical version of the addendum.", upload_to="addenda")),
            ],
            options={
                "verbose_name_plural": "Addenda",
            },
        ),
        migrations.CreateModel(
            name="Agreement",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the agreement, e.g. Agreement #01-01-2024", max_length=25, unique=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("employment contract", "employment contract"),
                            ("commission agreement", "commission agreement"),
                            ("contract of mandate", "contract of mandate"),
                            ("B2B", "B2B"),
                        ],
                        help_text="Type of the agreement one of employment contract, comission agreement, contract of mandate, B2B",
                        max_length=20,
                    ),
                ),
                ("salary_gross", models.IntegerField(help_text="Gross salary owed to the employee.")),
                ("create_date", models.DateField(help_text="Creation date.")),
                ("start_date", models.DateField(help_text="First day of the agreement.")),
                ("end_date", models.DateField(help_text="Last day of the agreement in physical version.")),
                (
                    "end_date_actual",
                    models.DateField(
                        help_text="Calculated last day of the agreement after adding addenda or termination.Necessary to calculate vacations for employee."
                    ),
                ),
                ("scan", models.FileField(help_text="Physical version of the addendum.", upload_to="agreements")),
                (
                    "is_current",
                    models.BooleanField(
                        default=True,
                        help_text="This attribute tells if the agreement is current or not (maybe the agreement expired).",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Salary",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.DateField(help_text="The date when salary went out.")),
                (
                    "fee",
                    models.IntegerField(
                        help_text="It's net money sent to the employee.",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Salaries",
            },
        ),
        migrations.CreateModel(
            name="Termination",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "name",
                    models.CharField(help_text="Name of the agreement, e.g. Termination #01-01-2024", max_length=25),
                ),
                ("create_date", models.DateField(help_text="Creation date.")),
                (
                    "end_date",
                    models.DateField(
                        help_text="End date of the termination is the new end date of the agreement (attribute Agreement.end_date_actual)."
                    ),
                ),
                ("scan", models.FileField(help_text="Physical version of the addendum.", upload_to="terminations/")),
            ],
        ),
        migrations.CreateModel(
            name="Vacation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("annual", "annual"),
                            ("maternity", "maternity"),
                            ("parental", "parental"),
                            ("childcare", "childcare"),
                            ("special", "special"),
                            ("sick", "sick"),
                            ("unpaid", "unpaid"),
                        ],
                        help_text="Type of the agreement one of annual, maternity, parental, childcare, special, sick, unpaid.",
                        max_length=9,
                    ),
                ),
                ("start_date", models.DateField(help_text="First day of the vacation.")),
                ("end_date", models.DateField(help_text="Last day of the vacation.")),
                ("scan", models.FileField(help_text="Physical version of the addendum.", upload_to="vacations")),
                (
                    "included_days_off",
                    models.PositiveSmallIntegerField(
                        help_text="If you take vacations and there are included days off (for example weekend) then you set included_days_off as 2 to count properly."
                    ),
                ),
            ],
        ),
    ]
